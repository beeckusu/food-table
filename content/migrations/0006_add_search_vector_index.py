# Generated by Django 5.2.7 on 2025-10-11 21:02

from django.contrib.postgres.operations import AddIndexConcurrently
from django.contrib.postgres.indexes import GinIndex
from django.contrib.postgres.search import SearchVector
from django.db import migrations


def populate_search_vector(apps, schema_editor):
    """
    Populate search_vector field for all existing Encyclopedia entries.
    """
    Encyclopedia = apps.get_model('content', 'Encyclopedia')

    # Update all entries with search vector
    for entry in Encyclopedia.objects.all():
        Encyclopedia.objects.filter(pk=entry.pk).update(
            search_vector=SearchVector('name', weight='A') + SearchVector('description', weight='B')
        )


def reverse_populate_search_vector(apps, schema_editor):
    """
    Clear search_vector field (reverse operation).
    """
    Encyclopedia = apps.get_model('content', 'Encyclopedia')
    Encyclopedia.objects.all().update(search_vector=None)


class Migration(migrations.Migration):

    dependencies = [
        ('content', '0005_encyclopediaversion_recipeversion'),
    ]

    operations = [
        # Add GIN index on search_vector field for fast full-text search
        migrations.AddIndex(
            model_name='encyclopedia',
            index=GinIndex(fields=['search_vector'], name='encyclopedia_search_vector_gin_idx'),
        ),
        # Populate search_vector for all existing entries
        migrations.RunPython(populate_search_vector, reverse_populate_search_vector),
    ]
